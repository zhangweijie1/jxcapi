<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mrguo.dao.bill.BillStockMapper">
    <resultMap id="BaseResultMap" type="com.mrguo.entity.bill.BillStock">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="bill_no" jdbcType="VARCHAR" property="billNo"/>
        <result column="bill_cat" jdbcType="VARCHAR" property="billCat"/>
        <result column="amount_payable" jdbcType="DECIMAL" property="amountPayable"/>
        <result column="amount_paid" jdbcType="DECIMAL" property="amountPaid"/>
        <result column="account_id" jdbcType="BIGINT" property="accountId"/>
        <result column="goods_quantity" jdbcType="INTEGER" property="goodsQuantity"/>
        <result column="goods_namestr" jdbcType="VARCHAR" property="goodsNamestr"/>
        <result column="hand_user_id" jdbcType="BIGINT" property="handUserId"/>
        <result column="create_user_id" jdbcType="BIGINT" property="createUserId"/>
        <result column="update_user_id" jdbcType="BIGINT" property="updateUserId"/>
        <result column="supplier_id" jdbcType="BIGINT" property="supplierId"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="audit_status" jdbcType="VARCHAR" property="auditStatus"/>
        <result column="audit_user_id" jdbcType="BIGINT" property="auditUserId"/>
        <result column="business_time" jdbcType="TIMESTAMP" property="bussinessTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
        -->
        id, bill_no, bill_cat, amount_payable, amount_paid, account_id, goods_quantity, goods_namestr,
        hand_user_id, create_user_id, update_user_id, supplier_id, remarks, audit_status,
        audit_user_id, business_time, create_time, update_time
    </sql>

    <select id="countRelationIdByBillId" resultType="java.lang.Integer">
        select count(1) from t_bill_stock
        where bill_relation_id = #{billId} and is_cancle = '0'
    </select>

    <select id="countRelationIdByBillIdAndBillCat" resultType="java.lang.Integer">
        select count(1) from t_bill_stock
        where bill_relation_id = #{billId} and bill_cat = #{billCat} and is_cancle = '0'
    </select>

    <select id="getBillByBillId" resultType="com.mrguo.entity.bill.BillStock">
        select b.*,
        st.name as store_name,
        e.real_name as hand_user_name,
        tb.bill_no as bill_relation_no
        from t_bill_stock b
        left join t_bill tb on tb.id = b.bill_relation_id
        left join bsd_store st on st.id = b.store_id
        left join sys_employee e on e.id = b.hand_user_id
        where b.id = #{billId}
    </select>

    <select id="getHasStockBillList" resultType="com.mrguo.entity.bill.BillStock">
        SELECT bs.*,
        sum(d.quantity) as goods_quantity,
        bi.bill_no as bill_relation_no,
        store.name as store_name
        from t_bill_stock as bs
        left join t_bill_detail d on d.bill_id = bs.id
        LEFT JOIN t_bill bi on bi.id = bs.bill_relation_id
        LEFT JOIN bsd_store store on store.id = bs.store_id
        <where>
            and bs.bill_cat = #{record.billCat,jdbcType=VARCHAR}
            <if test="record.isCancle == '0'.toString()">
                and bs.is_cancle = '0'
            </if>
            <if test="record.bBeginTime != null and record.bBeginTime != '' and record.bEndTime != null and record.bEndTime != ''">
                and bs.business_time between #{record.bBeginTime} and #{record.bEndTime}
            </if>
            <if test="record.handUserId != null and record.handUserId != ''">
                and bs.hand_user_id = #{record.handUserId}
            </if>
            <if test="record.keywords != null and record.keywords != ''">
                and (
                bs.`bill_no` LIKE concat('%',#{record.keywords,jdbcType=VARCHAR},'%')
                or bs.`goods_namestr` LIKE concat('%',#{record.keywords,jdbcType=VARCHAR},'%')
                or bs.`remarks` LIKE concat('%',#{record.keywords,jdbcType=VARCHAR},'%')
                )
            </if>
        </where>
        GROUP BY bs.id
        order by bs.create_time desc
    </select>

    <select id="selectWaiteStockInBillList" resultType="com.mrguo.entity.bill.Bill">
        select * from (
        select b.id, b.bill_no, b.business_time, b.bill_cat, b.bill_cat_name,
        b.comego_name, b.goods_namestr,
        store.name as store_name,
        ifnull(sum(d.change_quantity),0) as change_quantity,
        ifnull(sum(d.quantity),0) as goods_quantity,
        b.create_time
        FROM t_bill b
        left join bsd_store store on store.id = b.store_id
        left join t_bill_detail d on d.bill_id = b.id
        <where>
            b.bill_cat in ('purchase','sale_return', 'borrow_in', 'borrow_out_return')
            and b.is_cancle = '0'
            <if test="record.storeId != null and record.storeId != '' and record.storeId != '-1'.toString()">
                and b.store_id = #{record.storeId}
            </if>
            <if test="record.bBeginTime != null and record.bBeginTime != '' and record.bEndTime != null and record.bEndTime != ''">
                and b.business_time between #{record.bBeginTime} and #{record.bEndTime}
            </if>
        </where>
        GROUP BY b.id
        HAVING 1 = 1 and change_quantity <![CDATA[<]]> goods_quantity
        <if test="record.stockStatus == '0'.toString()">
            and change_quantity = 0
        </if>
        <if test="record.stockStatus == '1'.toString()">
            and change_quantity > 0
        </if>
        UNION ALL
        select db.id, b.bill_no, b.business_time, b.bill_cat, b.bill_cat_name,
        null as comego_name, b.goods_namestr,
        st.`name` as store_name,
        sum(d.change_quantity) as change_quantity,
        sum(d.quantity) as goods_quantity,
        b.create_time
        from t_bill_dispatch db
        left join t_bill b on b.id = db.bill_master_id
        left join t_bill_ext_dispatch dis on dis.id = b.id
        left join t_bill_detail d on d.bill_id = db.id
        left join bsd_store st on st.id = dis.store_id_in
        <where>
            b.is_cancle = '0' and b.bill_cat = 'dispatch' and db.direction = '1'
            <if test="record.bBeginTime != null and record.bBeginTime != '' and record.bEndTime != null and record.bEndTime != ''">
                and b.business_time between #{record.bBeginTime} and #{record.bEndTime}
            </if>
        </where>
        group by db.id
        HAVING 1 = 1 and change_quantity <![CDATA[<]]> goods_quantity
        <if test="record.stockStatus == '0'.toString()">
            and change_quantity = 0
        </if>
        <if test="record.stockStatus == '1'.toString()">
            and change_quantity > 0
        </if>
        ) a order by a.create_time desc
    </select>

    <select id="selectWaiteStockOutBillList" resultType="com.mrguo.entity.bill.Bill">
        select * from (
        select b.id, b.bill_no, b.business_time, b.bill_cat, b.bill_cat_name,
        b.comego_name, b.goods_namestr,
        store.name as store_name,
        ifnull(sum(d.change_quantity),0) as change_quantity,
        ifnull(sum(d.quantity),0) as goods_quantity,
        b.create_time
        FROM t_bill b
        left join bsd_store store on store.id = b.store_id
        left join t_bill_detail d on d.bill_id = b.id
        <where>
            b.bill_cat in ('sale','purchase_return','borrow_out','borrow_in_return')
            and b.is_cancle = '0'
            <if test="record.bBeginTime != null and record.bBeginTime != '' and record.bEndTime != null and record.bEndTime != ''">
                and b.business_time between #{record.bBeginTime} and #{record.bEndTime}
            </if>
        </where>
        GROUP BY b.id
        HAVING 1 = 1 and change_quantity <![CDATA[<]]> goods_quantity
        <if test="record.stockStatus == '0'.toString()">
            and change_quantity = 0
        </if>
        <if test="record.stockStatus == '1'.toString()">
            and change_quantity > 0
        </if>
        UNION ALL
        select b.id, b.bill_no, b.business_time, b.bill_cat, b.bill_cat_name,
        null as comego_name, b.goods_namestr,
        st.`name` as store_name,
        ifnull(sum(dd.change_quantity_out),0) as change_quantity,
        ifnull(sum(d.quantity),0) as goods_quantity,
        b.create_time
        from t_bill_dispatch db
        left join t_bill b on b.id = db.bill_master_id
        left join t_bill_ext_dispatch dis on dis.id = b.id
        left join t_bill_detail d on d.bill_id = b.id
        left join t_bill_detail_ext_dispatch dd on dd.id = d.id
        left join bsd_store st on st.id = dis.store_id_out
        <where>
            b.is_cancle = '0' and b.bill_cat = 'dispatch' and db.direction = '0'
            <if test="record.bBeginTime != null and record.bBeginTime != '' and record.bEndTime != null and record.bEndTime != ''">
                and b.business_time between #{record.bBeginTime} and #{record.bEndTime}
            </if>
        </where>
        group by b.id
        <if test="record.stockStatus == '0'.toString()">
            HAVING goods_quantity > change_quantity
        </if>
        <if test="record.stockStatus == '1'.toString()">
            HAVING change_quantity > 0 and change_quantity <![CDATA[<]]> goods_quantity
        </if>
        ) a order by a.create_time desc
    </select>
</mapper>